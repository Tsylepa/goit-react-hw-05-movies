{"version":3,"file":"static/js/293.abe3ca74.chunk.js","mappings":"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","sources":["components/Gallery/Gallery.styled.js","components/Gallery/Gallery.jsx","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","pages/SearchMovies/SearchMovies.styled.js","pages/SearchMovies/SearchMovies.jsx","requests/requests.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Grid = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  padding: 0;\n  margin: 20px auto;\n`;\n\nexport const Movie = styled.li`\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n  img {\n    width: 100%;\n    object-fit: cover;\n    border-radius: 4px;\n    box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n      0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  }\n`;\n\nexport const Title = styled.p`\n  font-weight: 500;\n  font-size: 20px;\n  letter-spacing: 0.04em;\n`;\n","import { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport placeholder from 'images/placeholder.webp';\nimport { Grid, Movie, Title } from './Gallery.styled';\n\nfunction Gallery({ movies }) {\n  const location = useLocation();\n  return (\n    <>\n      <Grid>\n        {movies.map(({ id, poster_path, title }) => (\n          <Movie key={id}>\n            <Link\n              to={`/movies/${id}`}\n              state={{ from: location.pathname + location.search }}\n            >\n              <img\n                src={\n                  poster_path\n                    ? 'https://image.tmdb.org/t/p/w500' + poster_path\n                    : placeholder\n                }\n                width=\"300\"\n                alt={title}\n              />\n              <Title>{title}</Title>\n            </Link>\n          </Movie>\n        ))}\n      </Grid>\n    </>\n  );\n}\n\nexport default Gallery;\n","import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  width: 100vw;\n  height: 100vh;\n  top: 0;\n  left: 0;\n  background-color: white;\n  opacity: 0.8;\n  z-index: 999;\n`;\n","import { BallTriangle } from 'react-loader-spinner';\nimport { Overlay } from './Loader.styled';\n\nconst Loader = () => (\n  <Overlay>\n    <BallTriangle\n      height={100}\n      width={100}\n      radius={5}\n      color=\"orangered\"\n      ariaLabel=\"ball-triangle-loading\"\n      wrapperStyle={{\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        opacity: 1,\n        transform: 'translate(-50%,-50%)',\n      }}\n    />\n  </Overlay>\n);\n\nexport default Loader;\n","import styled from 'styled-components';\n\nexport const Field = styled.input`\n  padding: 6px 10px;\n  border-radius: 6px;\n  font-size: 20px;\n  border: 2px solid black;\n\n  :focus {\n    border-color: orangered;\n  }\n`;\n\nexport const Submit = styled.button`\n  height: 100%;\n  font-size: 20px;\n  background-color: orangered;\n  color: white;\n  border: none;\n  border-radius: 6px;\n  padding: 6px 10px;\n  margin-left: 6px;\n\n  :hover {\n    background-color: orange;\n    cursor: pointer;\n  }\n`;\n","import { getMoviesByKeyword } from 'requests/requests';\nimport { useState, useEffect, Suspense } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Field, Submit } from './SearchMovies.styled';\nimport Gallery from 'components/Gallery';\nimport Loader from 'components/Loader';\n\nfunction SearchMovies() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(true);\n\n  useEffect(() => {\n    setMovies([]);\n    setQuery(searchParams.get('query') ?? '');\n  }, [searchParams]);\n\n  useEffect(() => {\n    if (!query) return;\n    setIsLoaded(false);\n    async function search() {\n      try {\n        const { results } = await getMoviesByKeyword(query);\n        setMovies(results);\n        setIsLoaded(true);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    setSearchParams({ query });\n    search();\n  }, [query, setSearchParams]);\n\n  function onSubmit(e) {\n    e.preventDefault();\n    setQuery(e.target.search.value);\n  }\n\n  return (\n    <form onSubmit={onSubmit} style={{ textAlign: 'center' }}>\n      <Field type=\"text\" name=\"search\" />\n      <Submit type=\"submit\" children=\"Search\" />\n      <Suspense>\n        {!isLoaded ? <Loader /> : <Gallery movies={movies} />}\n      </Suspense>\n    </form>\n  );\n}\n\nexport default SearchMovies;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = 'f8511e8dedf10eda656f1fd45ffd8165';\n\n//TRENDING\nasync function getTrending(page) {\n  const { data } = await axios.get(\n    `${BASE_URL}trending/movie/week?api_key=${KEY}&page=${page}&language=en-US`\n  );\n  return data;\n}\n\n//DETAILS\nasync function getMovieById(id) {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${KEY}&append_to_response=videos&language=en-US`\n  );\n  return data;\n}\n\n//SEARCH\nasync function getMoviesByKeyword(keyword) {\n  const { data } = await axios.get(\n    `${BASE_URL}search/movie?api_key=${KEY}&query=${keyword}&language=en-US`\n  );\n  return data;\n}\n\n//REVIEWS\nasync function getMovieReviews(id) {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${KEY}&language=en-US`\n  );\n  return data;\n}\n\n//CAST\nasync function getMovieCast(id) {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  return data;\n}\n\nexport {\n  getTrending,\n  getMovieById,\n  getMoviesByKeyword,\n  getMovieReviews,\n  getMovieCast,\n};\n"],"names":["Grid","styled","Movie","Title","movies","location","useLocation","map","id","poster_path","title","to","state","from","pathname","search","src","placeholder","width","alt","Overlay","height","radius","color","ariaLabel","wrapperStyle","position","top","left","opacity","transform","Field","Submit","useSearchParams","searchParams","setSearchParams","useState","query","setQuery","setMovies","isLoaded","setIsLoaded","useEffect","get","getMoviesByKeyword","results","console","log","onSubmit","e","preventDefault","target","value","style","textAlign","type","name","children","Suspense","Gallery","Loader","BASE_URL","KEY","getTrending","page","axios","data","getMovieById","keyword","getMovieReviews","getMovieCast"],"sourceRoot":""}