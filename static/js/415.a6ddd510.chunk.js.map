{"version":3,"file":"static/js/415.a6ddd510.chunk.js","mappings":"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","sources":["components/Gallery/Gallery.styled.js","components/Gallery/Gallery.jsx","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","pages/Home.jsx","requests/requests.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Grid = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  padding: 0;\n  margin: 20px auto;\n`;\n\nexport const Movie = styled.li`\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n  img {\n    width: 100%;\n    object-fit: cover;\n    border-radius: 4px;\n    box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n      0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  }\n`;\n\nexport const Title = styled.p`\n  font-weight: 500;\n  font-size: 20px;\n  letter-spacing: 0.04em;\n`;\n","import { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport placeholder from 'images/placeholder.webp';\nimport { Grid, Movie, Title } from './Gallery.styled';\n\nfunction Gallery({ movies }) {\n  const location = useLocation();\n  return (\n    <>\n      <Grid>\n        {movies.map(({ id, poster_path, title }) => (\n          <Movie key={id}>\n            <Link\n              to={`/movies/${id}`}\n              state={{ from: location.pathname + location.search }}\n            >\n              <img\n                src={\n                  poster_path\n                    ? 'https://image.tmdb.org/t/p/w500' + poster_path\n                    : placeholder\n                }\n                width=\"300\"\n                alt={title}\n              />\n              <Title>{title}</Title>\n            </Link>\n          </Movie>\n        ))}\n      </Grid>\n    </>\n  );\n}\n\nexport default Gallery;\n","import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  width: 100vw;\n  height: 100vh;\n  top: 0;\n  left: 0;\n  background-color: white;\n  opacity: 0.8;\n  z-index: 999;\n`;\n","import { BallTriangle } from 'react-loader-spinner';\nimport { Overlay } from './Loader.styled';\n\nconst Loader = () => (\n  <Overlay>\n    <BallTriangle\n      height={100}\n      width={100}\n      radius={5}\n      color=\"orangered\"\n      ariaLabel=\"ball-triangle-loading\"\n      wrapperStyle={{\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        opacity: 1,\n        transform: 'translate(-50%,-50%)',\n      }}\n    />\n  </Overlay>\n);\n\nexport default Loader;\n","import { useState, useEffect } from 'react';\nimport { getTrending } from 'requests';\nimport Gallery from 'components/Gallery';\nimport Loader from 'components/Loader';\n\nfunction Home() {\n  const [trending, setTrending] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  useEffect(() => {\n    async function init() {\n      try {\n        const { results } = await getTrending(1);\n        setTrending(results);\n        setIsLoaded(true);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    init();\n  }, []);\n\n  return <>{!isLoaded ? <Loader /> : <Gallery movies={trending} />}</>;\n}\n\nexport default Home;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = 'f8511e8dedf10eda656f1fd45ffd8165';\n\n//TRENDING\nasync function getTrending(page) {\n  const { data } = await axios.get(\n    `${BASE_URL}trending/movie/week?api_key=${KEY}&page=${page}&language=en-US`\n  );\n  return data;\n}\n\n//DETAILS\nasync function getMovieById(id) {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${KEY}&append_to_response=videos&language=en-US`\n  );\n  return data;\n}\n\n//SEARCH\nasync function getMoviesByKeyword(keyword) {\n  const { data } = await axios.get(\n    `${BASE_URL}search/movie?api_key=${KEY}&query=${keyword}&language=en-US`\n  );\n  return data;\n}\n\n//REVIEWS\nasync function getMovieReviews(id) {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${KEY}&language=en-US`\n  );\n  return data;\n}\n\n//CAST\nasync function getMovieCast(id) {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  return data;\n}\n\nexport {\n  getTrending,\n  getMovieById,\n  getMoviesByKeyword,\n  getMovieReviews,\n  getMovieCast,\n};\n"],"names":["Grid","styled","Movie","Title","movies","location","useLocation","map","id","poster_path","title","to","state","from","pathname","search","src","placeholder","width","alt","Overlay","height","radius","color","ariaLabel","wrapperStyle","position","top","left","opacity","transform","useState","trending","setTrending","isLoaded","setIsLoaded","useEffect","getTrending","results","console","log","init","BASE_URL","KEY","page","axios","data","getMovieById","getMoviesByKeyword","keyword","getMovieReviews","getMovieCast"],"sourceRoot":""}