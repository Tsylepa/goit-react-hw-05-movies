{"version":3,"file":"static/js/33.0bf9232b.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.js","components/Loader/Loader.jsx","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","requests/requests.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  width: 100vw;\n  height: 100vh;\n  top: 0;\n  left: 0;\n  background-color: white;\n  opacity: 0.8;\n  z-index: 999;\n`;\n","import { BallTriangle } from 'react-loader-spinner';\nimport { Overlay } from './Loader.styled';\n\nconst Loader = () => (\n  <Overlay>\n    <BallTriangle\n      height={100}\n      width={100}\n      radius={5}\n      color=\"orangered\"\n      ariaLabel=\"ball-triangle-loading\"\n      wrapperStyle={{\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        opacity: 1,\n        transform: 'translate(-50%,-50%)',\n      }}\n    />\n  </Overlay>\n);\n\nexport default Loader;\n","import styled from 'styled-components';\nimport { Link, NavLink } from 'react-router-dom';\n\nexport const Info = styled.div`\n  display: flex;\n  gap: 20px;\n  margin-top: 20px;\n\n  img {\n    box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n      0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  }\n`;\n\nexport const Back = styled(Link)`\n  display: flex;\n  align-items: center;\n  font-weight: 500;\n  letter-spacing: 0.05em;\n\n  :hover {\n    color: orangered;\n  }\n`;\n\nexport const MoreInfo = styled.ul`\n  display: flex;\n  gap: 24px;\n  padding: 0 15px;\n  font-weight: 500;\n  color: orangered;\n\n  li {\n    display: flex;\n    align-items: center;\n\n    :hover {\n      color: orange;\n    }\n  }\n`;\n\nexport const MoreLink = styled(NavLink)`\n  position: relative;\n\n  ::before {\n    position: absolute;\n    left: -14px;\n    content: '+';\n    transition: content 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n\n  &.active {\n    color: orange;\n  }\n  &.active::before {\n    content: '-';\n  }\n`;\n\nexport const Meta = styled.p`\n  display: flex;\n  color: gray;\n  gap: 10px;\n`;\n","import { useEffect, useState, Suspense } from 'react';\nimport { useParams, Outlet, useLocation } from 'react-router-dom';\nimport { getMovieById } from '../../requests';\nimport placeholder from 'images/placeholder.webp';\nimport { Info, Back, MoreInfo, MoreLink, Meta } from './MovieDetails.styled';\nimport { MdArrowBackIosNew } from 'react-icons/md';\nimport { ThreeDots } from 'react-loader-spinner';\nimport Loader from 'components/Loader';\n\nfunction MovieDetails() {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  useEffect(() => {\n    async function getMovie() {\n      try {\n        setIsLoaded(false);\n\n        const resp = await getMovieById(movieId);\n\n        setMovie(resp);\n        setIsLoaded(true);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    getMovie();\n  }, [movieId]);\n\n  const { poster_path, overview, title, release_date, genres } = movie;\n  const location = useLocation();\n  const backPath = location.state?.from ?? '/';\n\n  return !isLoaded ? (\n    <Loader />\n  ) : (\n    <>\n      <Back to={backPath}>\n        <MdArrowBackIosNew />\n        Back\n      </Back>\n      <Info>\n        <img\n          src={\n            poster_path\n              ? 'https://image.tmdb.org/t/p/w500' + poster_path\n              : placeholder\n          }\n          width=\"300\"\n          alt={title}\n        />\n        <div>\n          <h2>{title}</h2>\n          <Meta>\n            <span>{release_date.slice(0, 4)}</span>\n            {genres.map(({ name }) => name).join(', ')}\n          </Meta>\n          <p>{overview}</p>\n          <MoreInfo>\n            <li>\n              <MoreLink to=\"reviews\" state={{ from: backPath }}>\n                Reviews\n              </MoreLink>\n            </li>\n            <li>\n              <MoreLink to=\"cast\" state={{ from: backPath }}>\n                Cast\n              </MoreLink>\n            </li>\n          </MoreInfo>\n        </div>\n      </Info>\n\n      <Suspense\n        fallback={\n          <ThreeDots\n            color=\"orangered\"\n            secondaryColor=\"orange\"\n            height={40}\n            width={40}\n          />\n        }\n      >\n        <Outlet />\n      </Suspense>\n    </>\n  );\n}\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = 'f8511e8dedf10eda656f1fd45ffd8165';\n\n//TRENDING\nasync function getTrending(page) {\n  const { data } = await axios.get(\n    `${BASE_URL}trending/movie/week?api_key=${KEY}&page=${page}&language=en-US`\n  );\n  return data;\n}\n\n//DETAILS\nasync function getMovieById(id) {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${KEY}&append_to_response=videos&language=en-US`\n  );\n  return data;\n}\n\n//SEARCH\nasync function getMoviesByKeyword(keyword) {\n  const { data } = await axios.get(\n    `${BASE_URL}search/movie?api_key=${KEY}&query=${keyword}&language=en-US`\n  );\n  return data;\n}\n\n//REVIEWS\nasync function getMovieReviews(id) {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${KEY}&language=en-US`\n  );\n  return data;\n}\n\n//CAST\nasync function getMovieCast(id) {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  return data;\n}\n\nexport {\n  getTrending,\n  getMovieById,\n  getMoviesByKeyword,\n  getMovieReviews,\n  getMovieCast,\n};\n"],"names":["Overlay","styled","height","width","radius","color","ariaLabel","wrapperStyle","position","top","left","opacity","transform","Info","Back","Link","MoreInfo","MoreLink","NavLink","Meta","movieId","useParams","useState","movie","setMovie","isLoaded","setIsLoaded","useEffect","getMovieById","resp","console","log","getMovie","poster_path","overview","title","release_date","genres","backPath","useLocation","state","from","to","src","placeholder","alt","slice","map","name","join","Suspense","fallback","secondaryColor","Loader","BASE_URL","KEY","getTrending","page","axios","data","id","getMoviesByKeyword","keyword","getMovieReviews","getMovieCast"],"sourceRoot":""}