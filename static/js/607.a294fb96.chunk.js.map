{"version":3,"file":"static/js/607.a294fb96.chunk.js","mappings":"qRAEaA,EAAQC,EAAAA,GAAAA,EAAH,kHAOLC,EAAcD,EAAAA,GAAAA,GAAH,kGASXE,EAASF,EAAAA,GAAAA,EAAH,kE,mBCwBnB,MApCA,WACE,OAA8BG,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAgCF,EAAAA,EAAAA,WAAS,GAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAeR,OAbAE,EAAAA,EAAAA,YAAU,WAAM,wCACd,gHAE8BC,EAAAA,EAAAA,IAAgBH,GAF9C,iBAEYI,EAFZ,EAEYA,SACAC,QAAUR,EAAWO,GAC7BL,GAAY,GAJhB,gDAMIO,QAAQC,IAAR,MANJ,0DADc,uBAAC,WAAD,wBAUdC,EACD,GAAE,CAACR,IAGFF,IACEF,GAGA,SAACH,EAAD,UACGG,EAAQa,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,EAAwBC,eAAkBC,OAA1C,OACX,2BACE,gBAAKC,IAAKC,EAAQC,MAAM,KAAKC,IAAKP,KAClC,SAACjB,EAAD,UAASiB,KACT,uBAAIC,MAHGF,EADE,OAHf,SAACnB,EAAD,gCAaL,C,2VCtCK4B,EAAW,gCACXC,EAAM,mC,SAGGC,EAAY,GAAZA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,C,aAAf,O,oBAAA,WAA2BC,GAA3B,yFACyBC,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,uCACqBC,EADrB,iBACiCE,EADjC,oBADzB,uBACUE,EADV,EACUA,KADV,kBAISA,GAJT,2EAQeC,EAAa,GAAbA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,C,aAAf,O,oBAAA,WAA4Bf,GAA5B,yFACyBa,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,iBACDT,EADC,oBACaU,EADb,8CADzB,uBACUI,EADV,EACUA,KADV,kBAISA,GAJT,2EAQeE,EAAmB,GAAnBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,C,aAAf,O,oBAAA,WAAkCC,GAAlC,yFACyBJ,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,gCACcC,EADd,kBAC2BO,EAD3B,oBADzB,uBACUH,EADV,EACUA,KADV,kBAISA,GAJT,2EAQerB,EAAgB,GAAhBA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,C,aAAf,O,oBAAA,WAA+BO,GAA/B,yFACyBa,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,iBACDT,EADC,4BACqBU,EADrB,oBADzB,uBACUI,EADV,EACUA,KADV,kBAISA,GAJT,2EAQeI,EAAa,GAAbA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,CAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA4BlB,GAA5B,yFACyBa,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,iBACDT,EADC,4BACqBU,EADrB,oBADzB,uBACUI,EADV,EACUA,KADV,kBAISA,GAJT,kE","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","requests/requests.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Empty = styled.p`\n  margin-top: 20px;\n  font-size: 22px;\n  text-align: center;\n  letter-spacing: 0.1em;\n`;\n\nexport const ReviewsList = styled.ul`\n  padding: 0;\n  margin-top: 20px;\n\n  li {\n    margin-top: 30px;\n  }\n`;\n\nexport const Author = styled.p`\n  color: orangered;\n  font-weight: 700;\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getMovieReviews } from 'requests';\nimport { Author, Empty, ReviewsList } from './Reviews.styled';\nimport avatar from 'images/avatar.png';\n\nfunction Reviews() {\n  const [reviews, setReviews] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function fetchReviews() {\n      try {\n        const { results } = await getMovieReviews(movieId);\n        results.length && setReviews(results);\n        setIsLoaded(true);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    fetchReviews();\n  }, [movieId]);\n\n  return (\n    isLoaded &&\n    (!reviews ? (\n      <Empty>No reviews yet...</Empty>\n    ) : (\n      <ReviewsList>\n        {reviews.map(({ id, author, content, author_details: { rating } }) => (\n          <li key={id}>\n            <img src={avatar} width=\"40\" alt={author} />\n            <Author>{author}</Author>\n            <p>{content}</p>\n          </li>\n        ))}\n      </ReviewsList>\n    ))\n  );\n}\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = 'f8511e8dedf10eda656f1fd45ffd8165';\n\n//TRENDING\nasync function getTrending(page) {\n  const { data } = await axios.get(\n    `${BASE_URL}trending/movie/week?api_key=${KEY}&page=${page}&language=en-US`\n  );\n  return data;\n}\n\n//DETAILS\nasync function getMovieById(id) {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${id}?api_key=${KEY}&append_to_response=videos&language=en-US`\n  );\n  return data;\n}\n\n//SEARCH\nasync function getMoviesByKeyword(keyword) {\n  const { data } = await axios.get(\n    `${BASE_URL}search/movie?api_key=${KEY}&query=${keyword}&language=en-US`\n  );\n  return data;\n}\n\n//REVIEWS\nasync function getMovieReviews(id) {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${id}/reviews?api_key=${KEY}&language=en-US`\n  );\n  return data;\n}\n\n//CAST\nasync function getMovieCast(id) {\n  const { data } = await axios.get(\n    `${BASE_URL}movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  return data;\n}\n\nexport {\n  getTrending,\n  getMovieById,\n  getMoviesByKeyword,\n  getMovieReviews,\n  getMovieCast,\n};\n"],"names":["Empty","styled","ReviewsList","Author","useState","reviews","setReviews","isLoaded","setIsLoaded","movieId","useParams","useEffect","getMovieReviews","results","length","console","log","fetchReviews","map","id","author","content","author_details","rating","src","avatar","width","alt","BASE_URL","KEY","getTrending","page","axios","data","getMovieById","getMoviesByKeyword","keyword","getMovieCast"],"sourceRoot":""}